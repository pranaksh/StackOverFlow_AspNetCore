@model Stack.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
}


@using (Html.BeginForm("Register", "Home", FormMethod.Post))
{
<div class="form-row mx-auto" style="width:300px">
    <h2>Register</h2>
    <div class="form-group col-md-12">
        @Html.LabelFor(temp => temp.Username )
        @Html.TextBoxFor(temp => temp.Username, new { placeholder = "Username", @class = "form-control" })
        @Html.ValidationMessageFor(temp => temp.Username)
    </div>
    <div class="form-group col-md-12">
        @Html.LabelFor(temp => temp.Password)
        @Html.PasswordFor(temp => temp.Password, new { placeholder = "Password", @class = "form-control" })
        @Html.ValidationMessageFor(temp => temp.Password)
    </div>
    <div class="form-group col-md-12">
        @Html.LabelFor(temp => temp.ConfirmPassword)
        @Html.PasswordFor(temp => temp.ConfirmPassword, new { placeholder = "Confirm Password", @class = "form-control" })
        @Html.ValidationMessageFor(temp => temp.ConfirmPassword)
    </div>

    <div class="form-group col-md-12">
        @Html.LabelFor(temp => temp.Email)
        @Html.TextBoxFor(temp => temp.Email, new { placeholder = "Email", @class = "form-control" })
        @Html.ValidationMessageFor(temp => temp.Email)
    </div>

    <div class="form-group col-md-12">
        @Html.LabelFor(temp => temp.Mobile)
        @Html.TextBoxFor(temp => temp.Mobile, new { placeholder = "Mobile", @class = "form-control" })
        @Html.ValidationMessageFor(temp => temp.Mobile)
    </div>
    <br>
        <div class="inline-d-xl-inline-flex">
            <div class="flex-column">
        <button type="submit" class="btn btn-success">Register</button>
        </div>
            <div class="flex-column">
        <a href="~/home/Index">Back</a>
        </div>
        </div>
</div>
    @Html.ValidationSummary()

    
}

<h4>@ViewBag.message</h4>
